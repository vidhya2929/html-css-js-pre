Here‚Äôs a list of **JavaScript problems and mini-tasks** specifically chosen to improve your **website cloning skills**. These problems simulate features commonly seen in real websites like **Myntra, Amazon, Flipkart, DoorDash, etc.**

---

## ‚úÖ Beginner ‚Äì Core Website Interactions

### 1. **Toggle Navbar / Sidebar**

> ‚úÖ Problem: Show/hide a sidebar when clicking a menu icon (‚ò∞).

* Use `classList.toggle()` and `addEventListener`.

---

### 2. **Show/Hide Password Field**

> ‚úÖ Problem: Create an input field with a button to show/hide password.

* Practice with `input.type`, `onclick`, etc.

---

### 3. **Tabs (Like Filter Tabs)**

> ‚úÖ Problem: Switch content by clicking on different tabs.

* Practice adding/removing `active` classes.

---

### 4. **Dropdown Menu**4. **Dropdown Menu**

> ‚úÖ Problem: Show a dropdown on hover/click.

* Mimics navigation bars like on Amazon/Myntra.

---

### 5. **Image Carousel / Slider**

> ‚úÖ Problem: Automatically or manually slide images.

* Required in homepage banner clones.

---

## ‚úÖ Intermediate ‚Äì Product & Filter Logic

### 6. **Filter Products by Category**

> ‚úÖ Problem: Show only selected category of items (Men/Women/Kids).

* Practice DOM filtering using `data-*` attributes and `.filter()`.

---

### 7. **Search Bar with Suggestions**

> ‚úÖ Problem: As you type, suggestions appear from a list.

* Good for cloning product search in e-commerce.

---

### 8. **Sort Products by Price**

> ‚úÖ Problem: Sort a list of product cards (DOM elements) by price low‚Üíhigh or high‚Üílow.

---

### 9. **Checkbox Filtering**

> ‚úÖ Problem: When a checkbox (like ‚ÄúBrand‚Äù) is selected, only matching products show.

* You'll use `Array.prototype.filter()` and class selectors.

---

### 10. **Add to Cart Functionality**

> ‚úÖ Problem: Add product cards to a virtual cart and show total count and price.

---

## ‚úÖ Advanced ‚Äì User Experience & Logic

### 11. **Sticky Header on Scroll**

> ‚úÖ Problem: Make header stay at the top when scrolling.

* Use `window.onscroll`.

---

### 12. **Scroll to Top Button**

> ‚úÖ Problem: Show a button only when scrolled down and scroll back to top when clicked.

---

### 13. **Like / Favorite Toggle**

> ‚úÖ Problem: Click heart icon to add/remove from favorites.

---

### 14. **Product Zoom on Hover**

> ‚úÖ Problem: Zoom into a product image on mouse hover using JS or CSS class.

---

### 15. **Modal (Popup) for Install App / Signup**

> ‚úÖ Problem: Clicking a button shows a custom modal (not `alert()`).

---

## üí° Bonus Problems (Website Polish)

* Infinite scroll (load more on scroll)
* Loader spinner before content appears
* Custom range slider for discount filter
* Countdown timer for deals
* Product quantity increment/decrement buttons

---

If you want **code for any of these**, just tell me:

> "Give me the code for \[problem name]"

Would you like me to group some of these into a **project-based learning path** (like cloning a full Myntra filters page with JS)?























Great move, Vidhya! Practicing basic problems is the best way to build strong JavaScript foundations. Here's a handpicked list of **basic JavaScript problems** ‚Äî **without answers** ‚Äî to help you understand **syntax, operators, functions, conditionals, loops, and arrays**.

---

## üü¢ BASICS: Variables, Data Types, and Operators

1. Declare a variable `name` and assign your name to it. Print it to the console.
2. Add two numbers and log the result.
3. Write a program to find the square of a number.
4. Create two variables and swap their values.
5. Write a program to check if a number is even or odd.
6. Calculate the area of a rectangle given width and height.
7. Find the average of three numbers.
8. Use `typeof` to find the type of any 3 different variables.

---

## üü° CONDITIONALS (if/else, switch)

9. Write a program to check if a person is eligible to vote (age ‚â• 18).
10. Check whether a number is positive, negative, or zero.
11. Find the largest among three numbers.
12. Given a day number (1 to 7), print the day name using `switch`.
13. Write a program to check if a year is a leap year.

---

## üîÅ LOOPS (for, while)

14. Print numbers from 1 to 10 using a loop.
15. Print even numbers from 1 to 20.
16. Print the multiplication table of 5.
17. Find the sum of numbers from 1 to 100.
18. Write a program to count backwards from 10 to 1.
19. Calculate factorial of a number using a loop.

---

## üß† FUNCTIONS

20. Create a function that takes two numbers and returns their sum.
21. Create a function to check whether a number is prime.
22. Write a function that returns the square of a number.
23. Create a function to convert Celsius to Fahrenheit.
24. Write a function to find the minimum of three numbers.

---

## üì¶ ARRAYS

25. Create an array of 5 fruits and print each one using a loop.
26. Find the largest number in an array.
27. Calculate the sum of all numbers in an array.
28. Count how many times a specific value appears in an array.
29. Reverse the elements of an array manually (without using `reverse()`).
30. Check if a value exists in an array.

---

## ‚úçÔ∏è STRING BASICS

31. Check if a string contains the word "JavaScript".
32. Convert a string to uppercase and lowercase.
33. Find the length of a given string.
34. Replace a word in a string with another word.
35. Get the first and last character of a string.

---

Would you like these in PDF/Doc format for printing? Or want a daily set of problems to practice with solutions the next day?










Perfect, Vidhya! Here‚Äôs a curated list of **small project ideas** using **just HTML and JavaScript** (no frameworks, no CSS required unless you want to style). These are great for beginners to **practice logic, DOM manipulation, events, and storage**.

---

## üü¢ BEGINNER PROJECTS (HTML + JS Only)

### 1. ‚úÖ **Click Counter**

* Every time you click a button, the number increases.
* Add a reset button.
* Practice: `variables`, `eventListener`, `innerText`.

---

### 2. ‚úÖ **Even or Odd Checker**

* User enters a number in an input.
* Clicks a button to check.
* Display: "Even" or "Odd".
* Practice: `if/else`, `modulo`, `input.value`.

---

### 3. ‚úÖ **Simple Calculator**

* Take 2 inputs: num1 and num2.
* Buttons for `+`, `-`, `*`, `/`.
* Show result when a button is clicked.
* Practice: `functions`, `DOM`, `parseInt`.

---

### 4. ‚úÖ **Temperature Converter**

* Input in Celsius ‚Üí shows Fahrenheit.
* Or input in Fahrenheit ‚Üí shows Celsius.
* Practice: `functions`, `math`, `events`.

---

### 5. ‚úÖ **To-Do List (Basic)**

* Add item ‚Üí it appears in a list.
* Click a task ‚Üí it gets deleted.
* Optional: Save list in `localStorage`.
* Practice: `createElement`, `appendChild`, `localStorage`.

---

### 6. ‚úÖ **Prime Number Checker**

* Input a number ‚Üí check if it's prime.
* Use the `isPrime()` function you wrote.
* Practice: loops, conditionals, user input.

---

### 7. ‚úÖ **Typing Speed Tester**

* Show a random sentence.
* Measure how long user takes to type it.
* Calculate words per minute (WPM).
* Practice: `Date`, `timers`, `string methods`.

---

### 8. ‚úÖ **Random Quote Generator**

* Click a button ‚Üí shows a new quote.
* Quotes can be stored in an array.
* Practice: `arrays`, `Math.random()`, DOM.

---

### 9. ‚úÖ **Digital Clock**

* Show live time (HH\:MM\:SS) updating every second.
* Practice: `Date`, `setInterval`, `textContent`.

---

### 10. ‚úÖ **Guess the Number Game**

* Computer picks a random number (1-100).
* User guesses ‚Üí tells if it's too high, too low, or correct.
* Track number of tries.
* Practice: `Math.random()`, loops, conditionals.

---

Would you like to start building one of these **step-by-step**?
I can give the HTML + JavaScript code for any project above ‚Äî just pick one!
